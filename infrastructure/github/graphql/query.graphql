query GetAll($owner : String!, $repo_name : String!,
    $issueAfter : String, $issueFilters : IssueFilters, $issueOrder : IssueOrder,
    $commentAfter : String,
    $IssuePageSize : Int = 100,
    $CommentPageSize : Int = 100) {
    repository(owner: $owner, name: $repo_name) {
        issues(after: $issueAfter,
            filterBy: $issueFilters,
            first: $IssuePageSize,
            orderBy: $issueOrder) {
            nodes {
                databaseId
                number
                author {
                    login
                }
                closed
                closedAt
                createdAt
                labels(first: 100) {
                    nodes {
                        name
                    }
                }
                assignees(first: 100) {
                    nodes {
                        login
                        email
                    }
                }
                title
                body
                url
                timelineItems(first: 100) {
                    nodes {
                        __typename
                        ... on CrossReferencedEvent {
                            actor {
                                login
                            }
                            createdAt
                        }
                        ... on UnassignedEvent {
                            actor {
                                login
                            }
                            assignee {
                                ... on User {
                                    login
                                    email
                                }
                            }
                            createdAt
                        }
                    }
                }
                comments(first: $CommentPageSize, after: $commentAfter) {
                    nodes {
                        databaseId
                        body
                        viewerCanReact
                        author {
                            login
                        }
                    }
                    pageInfo {
                        endCursor
                        hasNextPage
                    }
                }
            }
            pageInfo {
                endCursor
                hasNextPage
            }
        }
        createdAt
    }
    rateLimit {
        limit
        cost
        remaining
        resetAt
    }
}